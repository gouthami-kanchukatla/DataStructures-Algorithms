class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        n = len(cost)
        dp = [0] * (n+1)

        # dp[0] = cost[0]
        # dp[1] = cost[1]
        
        for i in range(2,n +1):
            one_step  = dp[i-1] + cost[i-1]
            two_steps = dp[i-2]  + cost[i-2]
            dp[i] = min (one_step , two_steps)
        
        return dp[n]
        


        
#         def helper(i):  ---> solution 1
            
#             if i >= n:
#                 return 0
#             if dp[i] != -1:
#                 return dp[i]
            
            
#             dp[i] = cost[i] + min(helper(i+1) , helper(i+2))
#             return  dp[i]

#         return min(helper(0), helper(1) )

